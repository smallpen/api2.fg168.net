<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | 預設 Session 驅動程式
    |--------------------------------------------------------------------------
    |
    | 此選項控制預設的 session「驅動程式」，用於儲存每個請求的 session。
    | Laravel 支援多種後端驅動程式，可透過此設定檔進行設定。
    |
    | 支援的驅動程式: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | Session 生命週期
    |--------------------------------------------------------------------------
    |
    | 此選項指定 session 在被視為過期之前可以閒置的分鐘數。
    | 如果超過此時間，session 將在後續請求中失效。
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => false,

    /*
    |--------------------------------------------------------------------------
    | Session 加密
    |--------------------------------------------------------------------------
    |
    | 此選項允許你指定是否應該加密所有 session 資料。
    | 如果啟用，所有資料都會使用應用程式的加密金鑰進行加密。
    |
    */

    'encrypt' => false,

    /*
    |--------------------------------------------------------------------------
    | Session 檔案位置
    |--------------------------------------------------------------------------
    |
    | 使用原生 session 驅動程式時，我們需要一個位置來儲存 session 檔案。
    | 預設值已為你設定，但你可以指定不同的位置。
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session 資料庫連線
    |--------------------------------------------------------------------------
    |
    | 使用「database」或「redis」session 驅動程式時，你可以指定一個
    | 連線，用於管理這些 session。這應該對應到你的資料庫設定選項。
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session 資料庫表格
    |--------------------------------------------------------------------------
    |
    | 使用「database」session 驅動程式時，你可以指定用於管理 session
    | 的資料庫表格。當然，已為你設定了合理的預設值。
    |
    */

    'table' => 'sessions',

    /*
    |--------------------------------------------------------------------------
    | Session 快取儲存
    |--------------------------------------------------------------------------
    |
    | 使用基於快取的 session 驅動程式時，你可以在此列出應該用於這些
    | session 的快取儲存。此值必須對應到你的快取設定中的一個儲存。
    |
    | 影響: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | 某些 session 驅動程式必須手動清理過期的 session，而其他驅動程式
    | 則會自動清理。此選項控制清理過期 session 的機率。
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 名稱
    |--------------------------------------------------------------------------
    |
    | 此選項指定 session cookie 的名稱。預設情況下，我們會使用
    | Laravel 框架名稱，但你可以自由更改為任何你想要的名稱。
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 路徑
    |--------------------------------------------------------------------------
    |
    | Session cookie 路徑決定了 cookie 對應用程式可用的路徑。
    | 通常，這應該是你的應用程式的根路徑。
    |
    */

    'path' => '/',

    /*
    |--------------------------------------------------------------------------
    | Session Cookie 網域
    |--------------------------------------------------------------------------
    |
    | 此選項決定了 session cookie 可用的網域。預設情況下，cookie
    | 將對應用程式的根網域可用。
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | 僅 HTTPS Cookies
    |--------------------------------------------------------------------------
    |
    | 將此選項設定為 true，session cookies 將只會在連線為 HTTPS 時
    | 傳送回伺服器。這將防止 cookie 在不安全的連線中被傳送。
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | 僅 HTTP 存取
    |--------------------------------------------------------------------------
    |
    | 將此選項設定為 true，將防止 JavaScript 存取 session cookie 的值。
    | 這有助於防止跨站腳本攻擊 (XSS)。
    |
    */

    'http_only' => true,

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | 此選項決定你的 cookies 如何在跨站請求中處理，並可用於減輕
    | CSRF 攻擊和其他安全問題。
    |
    | 支援的值: "lax", "strict", "none", null
    |
    */

    'same_site' => 'lax',

];
