<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 預設驗證 Guard
    |--------------------------------------------------------------------------
    |
    | 此選項控制預設的驗證「guard」和密碼重設選項。你可以根據需要
    | 更改這些預設值，但對大多數應用程式來說，這是一個完美的開始。
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | 驗證 Guards
    |--------------------------------------------------------------------------
    |
    | 接下來，你可以為應用程式定義每個驗證 guard。當然，已經為你定義了
    | 一個很好的預設配置，它使用 session 儲存和 Eloquent 使用者提供者。
    |
    | 所有驗證驅動程式都有一個使用者提供者。這定義了如何從資料庫或
    | 應用程式使用的其他儲存機制中實際檢索使用者。
    |
    | 支援的驅動程式: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'sanctum' => [
            'driver' => 'sanctum',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 使用者提供者
    |--------------------------------------------------------------------------
    |
    | 所有驗證驅動程式都有一個使用者提供者。這定義了如何從資料庫或
    | 應用程式使用的其他儲存機制中實際檢索使用者。
    |
    | 如果你有多個使用者表或模型，你可以為每個模型/表配置多個來源，
    | 這些來源代表每個模型/表。然後可以將這些來源分配給任何額外的
    | 驗證 guard。
    |
    | 支援的驅動程式: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 重設密碼
    |--------------------------------------------------------------------------
    |
    | 你可以指定多個密碼重設配置，如果你有多個使用者表或模型，
    | 並且想要為每個使用者表使用單獨的密碼重設設定。
    |
    | 過期時間是密碼重設權杖被視為有效的分鐘數。此安全功能使權杖
    | 保持短期，因此它們有更少的時間被猜測。你可以根據需要更改此值。
    |
    | throttle 設定是使用者在產生更多密碼重設權杖之前必須等待的秒數。
    | 這可以防止使用者快速產生大量的密碼重設權杖。
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 密碼確認逾時
    |--------------------------------------------------------------------------
    |
    | 在這裡，你可以定義在要求使用者重新確認密碼之前，使用者可以
    | 繼續存取需要密碼確認的路由的時間量（以秒為單位）。
    |
    */

    'password_timeout' => 10800,

];
